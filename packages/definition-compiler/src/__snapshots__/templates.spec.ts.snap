// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`renders enum 1`] = `
"
export type Message_Decoded =  @core(Enum)< {
  Quit:  null 
  Greeting:  {{core 'Valuable'}}<@ref(GreetingMsg)_Decoded> 
} > 
            "
`;

exports[`renders struct 1`] = `""`;

exports[`renders tuple 1`] = `
"export type Tuple_bool_Person_u64_Decoded = [@ref(bool)_Decoded, @ref(Person)_Decoded, @ref(u64)_Decoded]

export type Tuple_bool_Person_u64_Encodable = [@ref(bool)_Encodable | @core(EncodeSkippable), @ref(Person)_Encodable | @core(EncodeSkippable), @ref(u64)_Encodable | @core(EncodeSkippable)]

const Tuple_bool_Person_u64_decoders = [@ref(bool)_decode, @ref(Person)_decode, @ref(u64)_decode]
const Tuple_bool_Person_u64_encoders = [@ref(bool)_encode, @ref(Person)_encode, @ref(u64)_encode].map(@core(wrapSkippableEncode))

export function Tuple_bool_Person_u64_decode(bytes: Uint8Array): @core(DecodeResult) {
  return @core(decodeTuple)(bytes, Tuple_bool_Person_u64_decoders)
}

export function Tuple_bool_Person_u64_encode(encodable: Tuple_bool_Person_u64_Encodable): Uint8Array {
  return @core(encodeTuple)(encodable, Tuple_bool_Person_u64_encoders)
}
"
`;

exports[`renders vec 1`] = `
"export type Vec_with_some_ref_Decoded =  @ref(with_some_ref)_Decoded[] 

export type Vec_with_some_ref_Encodable = (@ref(with_some_ref)_Encodable | @core(EncodeSkippable))[]

export const Vec_with_some_ref_item_encode = @core(wrapSkippableEncode)(@ref(with_some_ref)_encode)

export function Vec_with_some_ref_decode(bytes: Uint8Array): @core(DecodeResult) {
  return @core(decodeVec)(bytes, @ref(with_some_ref)_decode)
}

export function Vec_with_some_ref_encode(encodable: Vec_with_some_ref_Encodable): Uint8Array {
  return @core(encodeVec)(encodable, Vec_with_some_ref_item_encode)
}"
`;
