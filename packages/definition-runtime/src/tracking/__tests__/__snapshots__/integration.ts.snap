// Vitest Snapshot v1

exports[`Collecting big decode trace and formatting it > Error case 1`] = `
[
  "AllInOne
    Walk: <offset: 0; 01 10 47 65 79 21 00 04 10 21 32 33 34 0b 20 59 6f 20 68 6f ff ff ff ff ff ff ff ff ff ff 14 01 06 02 03 04 0c 00 01 00>
    Result: <not computed>
    Child steps: 3
AllInOne / <struct>.tuple_with_opts / TupleMsgMsg
    Walk: <offset: 0..7 (+7); 01 10 47 65 79 21 00…>
    Result: %O
    Child steps: 2
AllInOne / <struct>.tuple_with_opts / TupleMsgMsg / <tuple>.0 / Msg
    Walk: <offset: 0..6 (+6); 01 10 47 65 79 21…>
    Result: %O
    Child steps: 1
AllInOne / <struct>.tuple_with_opts / TupleMsgMsg / <tuple>.0 / Msg / <enum>::Greeting / str
    Walk: <offset: 1..6 (+5); …10 47 65 79 21…>
    Result: %O
    Child steps: 0
AllInOne / <struct>.tuple_with_opts / TupleMsgMsg / <tuple>.1 / Msg
    Walk: <offset: 6..7 (+1); …00…>
    Result: %O
    Child steps: 0
AllInOne / <struct>.map / MapStrU8
    Walk: <offset: 7..14 (+7); …04 10 21 32 33 34 0b…>
    Result: %O
    Child steps: 2
AllInOne / <struct>.map / MapStrU8 / <map>.<key> / str
    Walk: <offset: 8..13 (+5); …10 21 32 33 34…>
    Result: %O
    Child steps: 0
AllInOne / <struct>.map / MapStrU8 / <map>.<value> / u8
    Walk: <offset: 13..14 (+1); …0b…>
    Result: %O
    Child steps: 0
AllInOne / <struct>.alias / str
    Walk: <offset: 14; …20 59 6f 20 68 6f ff ff ff ff ff ff ff ff ff ff 14 01 06 02 03 04 0c 00 01 00>
    Result: ERROR - %s
    Child steps: 0
",
  [
    {
      "tag": "Greeting",
      "value": "Gey!",
    },
    {
      "tag": "Quit",
    },
  ],
  {
    "tag": "Greeting",
    "value": "Gey!",
  },
  "Gey!",
  {
    "tag": "Quit",
  },
  Map {
    "!234" => 11,
  },
  "!234",
  11,
  [TypeError: The encoded data was not valid for encoding utf-8],
]
`;

exports[`Collecting big decode trace and formatting it > Success case 1`] = `
[
  "AllInOne
    Walk: <offset: 0..40 (+40); 01 10 47 65 79 21 00 04 10 21 32 33 34 0b 20 59 6f 20 68 6f 20 68 6f 14 41 6c 69 63 65 00 14 01 06 02 03 04 0c 00 01 00>
    Result: %O
    Child steps: 6
AllInOne / <struct>.tuple_with_opts / TupleMsgMsg
    Walk: <offset: 0..7 (+7); 01 10 47 65 79 21 00…>
    Result: %O
    Child steps: 2
AllInOne / <struct>.tuple_with_opts / TupleMsgMsg / <tuple>.0 / Msg
    Walk: <offset: 0..6 (+6); 01 10 47 65 79 21…>
    Result: %O
    Child steps: 1
AllInOne / <struct>.tuple_with_opts / TupleMsgMsg / <tuple>.0 / Msg / <enum>::Greeting / str
    Walk: <offset: 1..6 (+5); …10 47 65 79 21…>
    Result: %O
    Child steps: 0
AllInOne / <struct>.tuple_with_opts / TupleMsgMsg / <tuple>.1 / Msg
    Walk: <offset: 6..7 (+1); …00…>
    Result: %O
    Child steps: 0
AllInOne / <struct>.map / MapStrU8
    Walk: <offset: 7..14 (+7); …04 10 21 32 33 34 0b…>
    Result: %O
    Child steps: 2
AllInOne / <struct>.map / MapStrU8 / <map>.<key> / str
    Walk: <offset: 8..13 (+5); …10 21 32 33 34…>
    Result: %O
    Child steps: 0
AllInOne / <struct>.map / MapStrU8 / <map>.<value> / u8
    Walk: <offset: 13..14 (+1); …0b…>
    Result: %O
    Child steps: 0
AllInOne / <struct>.alias / str
    Walk: <offset: 14..23 (+9); …20 59 6f 20 68 6f 20 68 6f…>
    Result: %O
    Child steps: 0
AllInOne / <struct>.another_struct / Character
    Walk: <offset: 23..29 (+6); …14 41 6c 69 63 65…>
    Result: %O
    Child steps: 1
AllInOne / <struct>.another_struct / Character / <struct>.name / str
    Walk: <offset: 23..29 (+6); …14 41 6c 69 63 65…>
    Result: %O
    Child steps: 0
AllInOne / <struct>.arr / ArraySetU8l2
    Walk: <offset: 29..36 (+7); …00 14 01 06 02 03 04…>
    Result: %O
    Child steps: 2
AllInOne / <struct>.arr / ArraySetU8l2 / SetU8
    Walk: <offset: 29..30 (+1); …00…>
    Result: %O
    Child steps: 0
AllInOne / <struct>.arr / ArraySetU8l2 / SetU8
    Walk: <offset: 30..36 (+6); …14 01 06 02 03 04…>
    Result: %O
    Child steps: 5
AllInOne / <struct>.arr / ArraySetU8l2 / SetU8 / u8
    Walk: <offset: 31..32 (+1); …01…>
    Result: %O
    Child steps: 0
AllInOne / <struct>.arr / ArraySetU8l2 / SetU8 / u8
    Walk: <offset: 32..33 (+1); …06…>
    Result: %O
    Child steps: 0
AllInOne / <struct>.arr / ArraySetU8l2 / SetU8 / u8
    Walk: <offset: 33..34 (+1); …02…>
    Result: %O
    Child steps: 0
AllInOne / <struct>.arr / ArraySetU8l2 / SetU8 / u8
    Walk: <offset: 34..35 (+1); …03…>
    Result: %O
    Child steps: 0
AllInOne / <struct>.arr / ArraySetU8l2 / SetU8 / u8
    Walk: <offset: 35..36 (+1); …04…>
    Result: %O
    Child steps: 0
AllInOne / <struct>.vec / VecBool
    Walk: <offset: 36..40 (+4); …0c 00 01 00>
    Result: %O
    Child steps: 3
AllInOne / <struct>.vec / VecBool / bool
    Walk: <offset: 37..38 (+1); …00…>
    Result: %O
    Child steps: 0
AllInOne / <struct>.vec / VecBool / bool
    Walk: <offset: 38..39 (+1); …01…>
    Result: %O
    Child steps: 0
AllInOne / <struct>.vec / VecBool / bool
    Walk: <offset: 39..40 (+1); …00>
    Result: %O
    Child steps: 0
",
  {
    "alias": "Yo ho ho",
    "another_struct": {
      "name": "Alice",
    },
    "arr": [
      Set {},
      Set {
        1,
        6,
        2,
        3,
        4,
      },
    ],
    "map": Map {
      "!234" => 11,
    },
    "tuple_with_opts": [
      {
        "tag": "Greeting",
        "value": "Gey!",
      },
      {
        "tag": "Quit",
      },
    ],
    "vec": [
      false,
      true,
      false,
    ],
  },
  [
    {
      "tag": "Greeting",
      "value": "Gey!",
    },
    {
      "tag": "Quit",
    },
  ],
  {
    "tag": "Greeting",
    "value": "Gey!",
  },
  "Gey!",
  {
    "tag": "Quit",
  },
  Map {
    "!234" => 11,
  },
  "!234",
  11,
  "Yo ho ho",
  {
    "name": "Alice",
  },
  "Alice",
  [
    Set {},
    Set {
      1,
      6,
      2,
      3,
      4,
    },
  ],
  Set {},
  Set {
    1,
    6,
    2,
    3,
    4,
  },
  1,
  6,
  2,
  3,
  4,
  [
    false,
    true,
    false,
  ],
  false,
  true,
  false,
]
`;
